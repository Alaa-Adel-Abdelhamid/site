Relationships between quantitative variables
========================================================
author: Matthew Rudd
date: 4/18/19 
transition: none

Motivation
========================================================
incremental:true

* Data  is often _**multivariate**_ ; we want to know how the variables relate. Variables 
can be _**quantitative**_ and/or _**categorical**_.
* For two quantitative variables, the basic tools are _**scatterplots**_, _**correlation**_,  and _**linear regression**_.
* For two categorical variables, the basic tools are _**two--way tables**_ and the _**$\chi^{2}$ test**_ (Chapter 8).


Scatterplots
========================================================
incremental:true

As always, start by _**plotting the data**_!

* _**Scatterplots**_ graph two quantitative variables simultaneously..
* Each point in a scatterplot corresponds to one observation.
* Look for an overall pattern. Is there a _**positive association**_, a _**negative association**_, 
or _**no association**_ ?

Example
========================================================
left: 25%

Heights of mothers and daughters:

***

```{r echo=FALSE }
library( alr4 ) ;
# average and SD of x-values:
m.avg <- mean( Heights$mheight ) ;
m.sd <- sd( Heights$mheight ) ;
# average and SD of y-values:
d.avg <- mean( Heights$dheight ) ;
d.sd <- sd( Heights$dheight ) ;
# set plotting ranges:
range.x <- c( m.avg - 3*m.sd,  m.avg + 3*m.sd);
range.y <- c( d.avg - 3*d.sd,  d.avg + 3*d.sd);
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
md.cor <- cor(Heights$mheight,Heights$dheight) ;
```


More informative scatterplots
==============================
incremental: true
left: 25%

Scatterplots can also provide categorical information:

***

```{r echo=FALSE, message=FALSE}
library( alr4 ) ;
oecd <- subset( UN11, UN11$group=="oecd") ;
other <- subset( UN11, UN11$group=="other") ;
africa <- subset( UN11, UN11$group=="africa") ;
plot( oecd$fertility, 
      oecd$lifeExpF, 
      col = "blue",
      pch = 0, 
      main = "Fertility and female life expectancy (UN data)",
      xlab = "Fertility",
      ylab = "Female life expectancy",
      xlim = range(UN11$fertility),
      ylim = range( UN11$lifeExpF ) ) ;
points( other$fertility, 
        other$lifeExpF, 
        col = "red",
        pch = 4 ) ;
points( africa$fertility, 
        africa$lifeExpF, 
        col = "darkgreen",
        pch = 2) ;
legend( "topright",
        legend = c("OECD", "Other", "Africa" ),
        col = c("blue", "red", "darkgreen" ),
        pch = c(0,4,2) ) ;
```

Correlation
=============
incremental: true

* The _**correlation**_  is a number between $\ -1 \$ and $\ +1 \$ that 
measures the _**linear**_ relationship shown in a scatterplot.
* The formula:
$$r ~ := ~ \frac{1}{n-1} ~ \sum_{i=1}^{n}{ \left( \frac{ x_{i} - \overline{x} }{ s_{x} } \right) \left( \frac{ y_{i} - \overline{y} }{ s_{y} } \right) } \quad .$$
* Correlations can be very useful, but _**don't forget to look at the data!**_

Interpreting correlations
==========================
incremental: true

* Positive correlation corresponds to a positive association; negative correlation 
corresponds to a negative association.
* If $\ r \$ is close to $\ 0 \, , \$ the linear relationship is weak; this relationship is stronger when $\ r \$ is closer to $\ 1 \$ or $\ -1 \$.
* $\ r = 1 \$ and $\ r = -1 \$ correspond to _**perfect**_  linear relationships. _**Never happens!**_

Anscombe's quartet
====================
left: 60%
incremental: true

```{r echo=FALSE}
par(mfrow=c(2,2))
plot( anscombe$x1, anscombe$y1, pch=16, col="darkorange") ;
plot( anscombe$x2, anscombe$y2, pch=16, col="darkorchid") ;
plot( anscombe$x3, anscombe$y3, pch=16, col="darkgreen") ;
plot( anscombe$x4, anscombe$y4, pch=16, col="darkblue") ;
```

***

$\ r \approx 0.8 \$ for all 4 data sets.

$\ r \$ is only useful for one of these. (?)

Mothers and daughters 
========================================================
left: 60%

```{r echo=FALSE }
library( alr4 ) ;
# average and SD of x-values:
m.avg <- mean( Heights$mheight ) ;
m.sd <- sd( Heights$mheight ) ;
# average and SD of y-values:
d.avg <- mean( Heights$dheight ) ;
d.sd <- sd( Heights$dheight ) ;
# set plotting ranges:
range.x <- c( m.avg - 3*m.sd,  m.avg + 3*m.sd);
range.y <- c( d.avg - 3*d.sd,  d.avg + 3*d.sd);
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
md.cor <- cor(Heights$mheight,Heights$dheight) ;
```

*** 

Mothers' average height: `r round(m.avg,2)`"

Mothers' SD: `r round(m.sd,2)`"

Daughters' average height: `r round(d.avg,2)`"

Daughters' SD: `r round(d.sd,2)`"

Correlation: `r round(md.cor,2)`

Short mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
short <- subset( Heights, (Heights$mheight >= 59.5) & (Heights$mheight < 60.5) ) ;
points( short$mheight, 
        short$dheight, 
        col="firebrick",
        pch = 4 ) ;

```

*** 

Dark red points: 

5' mothers 

---

Best guess of daughter's height?

Short mothers
========================================================
left: 60%

``` {r echo=FALSE}
shortd.avg <- mean( short$dheight ) ;
shortd.sd <- sd( short$dheight ) ;
bins <- shortd.avg + shortd.sd*seq(-4.5,4.5,by=1);
hist( short$dheight, 
      xlab = "Height in inches",
      main = "Daughters of 60 inch mothers",
      breaks = bins ) ;
```

***

Daughters' heights follow normal curve

**Average: `r round( mean( short$dheight ), 2 )`"**

SD: `r round( sd( short$dheight ), 2)`"

---

**Average height above 60"**

Short mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
points( short$mheight, 
        short$dheight, 
        col="firebrick",
        pch = 4 ) ;
points( 60, 
        shortd.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
```

***

Dark blue point:

(60, `r round(shortd.avg,2)`)

---

**On the average**, a 5' mother's daughter is 
`r round(shortd.avg,2)` inches tall.

Short mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
points( short$mheight, 
        short$dheight, 
        col="firebrick",
        pch = 4 ) ;
points( 60, 
        shortd.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
shortmom <- (60 - m.avg)/m.sd ;
```

***

5' mother : 

z = `r round(shortmom,2)`

---

Best guess of `r round(shortd.avg,2)` :

z = `r round( (shortd.avg - d.avg)/d.sd , 2 )`

**Compare the product of r and mom's z: `r round( md.cor*shortmom, 2 )`**

Tall mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
tall <- subset( Heights, (Heights$mheight >= 65.5) & (Heights$mheight < 66.5) ) ;
points( tall$mheight, 
        tall$dheight, 
        col="firebrick",
        pch = 4 ) ;

```

*** 

Dark red points: 

5'6" mothers

---

Best guess of daughter's height?

Tall mothers
========================================================
left: 60%

``` {r echo=FALSE}
talld.avg <- mean( tall$dheight ) ;
talld.sd <- sd( tall$dheight ) ;
bins <- talld.avg + talld.sd*seq(-4.5,4.5,by=1);
hist( tall$dheight,
      xlab = "Height in inches",
      main = "Daughters of 66 inch mothers",
      breaks = bins ) ;
```

***

Daughters' heights follow normal curve

**Average: `r round( mean( tall$dheight ), 2 )`"**

SD: `r round( sd( tall$dheight ), 2)`"

---

**Average height below 66"**

Tall mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
points( tall$mheight, 
        tall$dheight, 
        col="firebrick",
        pch = 4 ) ;
points( 66, 
        talld.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
```

***

Dark blue point:

(66, `r round(talld.avg,2)`)

---

**On the average**, a 5'6" mother's daughter is 
`r round(talld.avg,2)` inches tall.

Tall mothers
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
# focus on mothers of height 5 feet:
points( tall$mheight, 
        tall$dheight, 
        col="firebrick",
        pch = 4 ) ;
points( 66, 
        talld.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
tallmom <- (66 - m.avg)/m.sd ;
```

***

5'6" mother : 

z = `r round(tallmom,2)`

---

Best guess of `r round(talld.avg,2)` :

z = `r round( (talld.avg - d.avg)/d.sd , 2 )`

**Compare the product of r and mom's z: `r round( md.cor*tallmom, 2 )`**


Mothers and average daughters
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
points( 60, 
        shortd.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
points( m.avg, 
        d.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
points( 66, 
        talld.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
sub <- subset( Heights, 
               (Heights$mheight >= 57.5) & (Heights$mheight < 58.5) ) ;
points( 58, 
        mean( sub$dheight ), 
        col = "darkblue", 
        cex = 1.5,
        pch = 19 );
sub <- subset( Heights, 
               (Heights$mheight >= 68.5) & (Heights$mheight < 69.5) ) ;
points( 69, 
        mean( sub$dheight ), 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
d.fit <- lm( Heights$dheight ~ Heights$mheight ) ;
abline( d.fit, col="darkblue", lwd=1.5 ) ;
```

***

This process yields points that roughly follow a line.

**This is the _regression line_.**

The regression line always goes through the _**point of averages**_.

Mothers and average daughters
========================================================
left: 60%

```{r echo=FALSE }
# plot the data:
plot( Heights$mheight,
      Heights$dheight,
      xlab = "Mother's height",
      ylab = "Daughter's height",
      main = "Pearson-Lee height data",
      xlim = range.x,
      ylim = range.y,
      col = "darkgoldenrod",
      pch = 4 ) ;
# add reference lines:
abline( v = m.avg + m.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( v = m.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
abline( h = d.avg + d.sd*c(-2,-1,1,2), lty="dotted", lwd=.5 ) ;
abline( h = d.avg, lty = "dashed", lwd=1.5, col="tomato" ) ;
points( 60, 
        shortd.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
points( m.avg, 
        d.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
points( 66, 
        talld.avg, 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
sub <- subset( Heights, 
               (Heights$mheight >= 57.5) & (Heights$mheight < 58.5) ) ;
points( 58, 
        mean( sub$dheight ), 
        col = "darkblue", 
        cex = 1.5,
        pch = 19 );
sub <- subset( Heights, 
               (Heights$mheight >= 68.5) & (Heights$mheight < 69.5) ) ;
points( 69, 
        mean( sub$dheight ), 
        col = "darkblue",
        cex = 1.5,
        pch = 19 );
abline( d.fit, col="darkblue", lwd=1.5 ) ;
```

***

To follow the _**regression line**_:

When mom's height changes by 1 SD, the daughter's _**predicted**_ average height changes 
by r SDs.

Remember which SD is which!

Linear regression
==================
incremental: true

If there is a linear relationship, what line best fits the data?  

* ``Best fit" :  _**The sum of the squares of the residuals is as small as possible.**_
* _**Residuals**_ are the differences between the real data and the predictions on the line.
* The _**line of best fit**_ is the _**regression line**_:

$$ \widehat{y} = a + bx \ , \quad \mbox{where}$$

$$b ~ = ~ r \, \left( \frac{ s_{y} }{ s_{x} } \right) \quad ,  \quad a ~ = ~ \overline{y} - ~ b \, \overline{x} \, .$$

Linear regression
===================
incremental: true

* The slope of the regression line has the same sign as the correlation $\ r \$; shows 
how $\ \widehat{y} \$ changes when $\ x \$ changes.

* $\ r^{2} \$ measures the percentage of variation in $\ y \$ explained by 
linear regression; use $\ r^2 \$ for assessment.

* Plotting residuals is another useful assessment; there should be no discernible pattern.

Caveats
=========
incremental:true

* Correlation and linear regression _**assume**_ a linear relationship; otherwise, don't use them!
* Watch out for _**influential observations**_ and _**lurking variables**_.
* The regression line can be useful for _**prediction**_ but not for _**extrapolation**_.

> <center> _**CORRELATION IS NOT CAUSATION!**_ </center>
